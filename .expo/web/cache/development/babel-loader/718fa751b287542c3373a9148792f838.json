{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport firebase from \"firebase\";\nimport React, { useContext } from \"react\";\nexport var userContext = React.createContext({\n  user: null\n});\nexport var useSession = function useSession() {\n  var _useContext = useContext(userContext),\n      user = _useContext.user;\n\n  return user;\n};\nexport var useAuth = function useAuth() {\n  var _React$useState = React.useState(function () {\n    var user = firebase.auth().currentUser;\n    return {\n      initializing: !user,\n      user: user\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user: user\n    });\n  }\n\n  React.useEffect(function () {\n    var unsubscribe = firebase.auth().onAuthStateChanged(onChange);\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/context.js"],"names":["firebase","React","useContext","userContext","createContext","user","useSession","useAuth","useState","auth","currentUser","initializing","state","setState","onChange","useEffect","unsubscribe","onAuthStateChanged"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAGA,OAAO,IAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAoB;AAC9CC,EAAAA,IAAI,EAAE;AADwC,CAApB,CAApB;AAKP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC/B,oBAAiBJ,UAAU,CAACC,WAAD,CAA3B;AAAA,MAAQE,IAAR,eAAQA,IAAR;;AACA,SAAOA,IAAP;AACA,CAHM;AAKP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,wBAA0BN,KAAK,CAACO,QAAN,CAAe,YAAM;AAE9C,QAAMH,IAAI,GAAGL,QAAQ,CAACS,IAAT,GAAgBC,WAA7B;AAEA,WAAO;AACNC,MAAAA,YAAY,EAAE,CAACN,IADT;AAENA,MAAAA,IAAI,EAAJA;AAFM,KAAP;AAIA,GARyB,CAA1B;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAUA,WAASC,QAAT,CAAkBT,IAAlB,EAAwB;AACvBQ,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,YAAY,EAAE,KAAhB;AAAuBN,MAAAA,IAAI,EAAJA;AAAvB,KAAD,CAAR;AACA;;AAEDJ,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AAGrB,QAAMC,WAAW,GAAGhB,QAAQ,CAACS,IAAT,GAAgBQ,kBAAhB,CAAmCH,QAAnC,CAApB;AAGA,WAAO;AAAA,aAAME,WAAW,EAAjB;AAAA,KAAP;AACA,GAPD,EAOG,EAPH;AASA,SAAOJ,KAAP;AACA,CAzBM","sourcesContent":["import firebase from \"firebase\";\r\nimport React, { useContext } from \"react\";\r\n\r\n//create context with an initial null value for user\r\nexport const userContext = React.createContext({\r\n\tuser: null,\r\n});\r\n\r\n//creates react hook that allows us to access context\r\nexport const useSession = () => {\r\n\tconst { user } = useContext(userContext);\r\n\treturn user;\r\n};\r\n\r\nexport const useAuth = () => {\r\n\tconst [state, setState] = React.useState(() => {\r\n\t\t// firebase.auth().currentUser is a handy built in method to access the current user!\r\n\t\tconst user = firebase.auth().currentUser;\r\n\r\n\t\treturn {\r\n\t\t\tinitializing: !user,\r\n\t\t\tuser,\r\n\t\t};\r\n\t});\r\n\r\n\tfunction onChange(user) {\r\n\t\tsetState({ initializing: false, user });\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\t// listen for auth state changes with firebase's useful built in method\r\n\t\t// change the state to the current user (null if signed out)\r\n\t\tconst unsubscribe = firebase.auth().onAuthStateChanged(onChange);\r\n\r\n\t\t// unsubscribe to the listener when unmounting\r\n\t\treturn () => unsubscribe();\r\n\t}, []);\r\n\r\n\treturn state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}