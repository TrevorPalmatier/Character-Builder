{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\CharacterSelectScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { firestore, auth } from \"../firebase\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport textStyles from \"../styles/TextStyles\";\nimport CharacterCard from \"../components/CharacterCard\";\nexport default function CharacterSelectScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"hit\");\n    firestore.collection(\"users\").doc(auth.currentUser.uid).collection(\"characters\").get().then(function (snapshot) {\n      var thing = snapshot.docs;\n      setCharacters(thing);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var selectCharacter = function selectCharacter(index) {\n    props.navigation.navigate(\"CharacterPage\", {\n      character: characters[index].data()\n    });\n  };\n\n  var handleNewCharacter = function handleNewCharacter() {\n    props.navigation.navigate(\"CharacterCreation\");\n  };\n\n  return React.createElement(View, {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, characters.map(function (character, index) {\n    return React.createElement(CharacterCard, {\n      key: character.id,\n      index: index,\n      name: character.data().name,\n      select: selectCharacter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      handleNewCharacter();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \" New Character\")));\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: \"#404040\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  container: {\n    paddingTop: 20,\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#404040\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  button: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"90%\",\n    height: 60,\n    backgroundColor: \"#29293d\",\n    bottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/CharacterSelectScreen.js"],"names":["React","useEffect","useState","firestore","auth","textStyles","CharacterCard","CharacterSelectScreen","props","characters","setCharacters","console","log","collection","doc","currentUser","uid","get","then","snapshot","thing","docs","catch","error","selectCharacter","index","navigation","navigate","character","data","handleNewCharacter","styles","main","container","map","id","name","button","mainText","StyleSheet","create","flex","backgroundColor","width","height","alignItems","paddingTop","flexDirection","justifyContent","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { firestore, auth } from \"../firebase\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport textStyles from \"../styles/TextStyles\";\r\nimport CharacterCard from \"../components/CharacterCard\";\r\n\r\nexport default function CharacterSelectScreen(props) {\r\n\tconst [characters, setCharacters] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"hit\");\r\n\t\tfirestore\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(auth.currentUser.uid)\r\n\t\t\t.collection(\"characters\")\r\n\t\t\t.get()\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconst thing = snapshot.docs;\r\n\t\t\t\tsetCharacters(thing);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst selectCharacter = (index) => {\r\n\t\tprops.navigation.navigate(\"CharacterPage\", {\r\n\t\t\tcharacter: characters[index].data(),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleNewCharacter = () => {\r\n\t\tprops.navigation.navigate(\"CharacterCreation\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.main}>\r\n\t\t\t<ScrollView contentContainerStyle={styles.container}>\r\n\t\t\t\t{characters.map((character, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CharacterCard\r\n\t\t\t\t\t\t\tkey={character.id}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tname={character.data().name}\r\n\t\t\t\t\t\t\tselect={selectCharacter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ScrollView>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tstyle={styles.button}\r\n\t\t\t\tonPress={() => {\r\n\t\t\t\t\thandleNewCharacter();\r\n\t\t\t\t}}>\r\n\t\t\t\t<Text style={textStyles.mainText}> New Character</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcontainer: {\r\n\t\tpaddingTop: 20,\r\n\t\tflex: 1,\r\n\t\tflexDirection: \"column\",\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t},\r\n\tbutton: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"90%\",\r\n\t\theight: 60,\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tbottom: 30,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}