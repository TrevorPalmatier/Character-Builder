{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\CameraScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ProgressBarAndroidComponent } from \"react-native-web/dist/index\";\nimport CameraPreview from \"../components/CameraPreview\";\nimport { Camera } from \"expo-camera\";\n\nvar CameraScreen = function CameraScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      camera = _useState2[0],\n      setCamera = _useState2[1];\n\n  var _useState3 = useState(\"off\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flashMode = _useState4[0],\n      setFlashMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      previewVisible = _useState6[0],\n      setPreviewVisible = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      capturedImage = _useState8[0],\n      setCapturedImage = _useState8[1];\n\n  var _useState9 = useState(Camera.Constants.Type.back),\n      _useState10 = _slicedToArray(_useState9, 2),\n      camType = _useState10[0],\n      setType = _useState10[1];\n\n  var takePicture = function takePicture() {\n    var photo;\n    return _regeneratorRuntime.async(function takePicture$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync());\n\n          case 2:\n            photo = _context.sent;\n            setPreviewVisible(true);\n            setCapturedImage(photo);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePhoto = function savePhoto() {\n    setPreviewVisible(false);\n    props.navigation.navigate(\"Home\");\n    console.log(\"saved\");\n  };\n\n  var retakePhoto = function retakePhoto() {\n    setCapturedImage(null);\n    setPreviewVisible(false);\n    console.log(\"retake\");\n  };\n\n  return React.createElement(View, {\n    style: styles.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, previewVisible && capturedImage ? React.createElement(CameraPreview, {\n    photo: capturedImage,\n    savePhoto: savePhoto,\n    retakePhoto: retakePhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }) : React.createElement(Camera, {\n    style: styles.camera,\n    type: camType,\n    flashMode: flashMode,\n    ref: function ref(r) {\n      return setCamera(r);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.camCapBtnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: takePicture,\n    style: styles.camCapBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  camera: {\n    flex: 1,\n    width: \"100%\"\n  },\n  camCapBtnContainer: {\n    alignSelf: \"center\",\n    flex: 1,\n    alignItems: \"center\"\n  },\n  camCapBtn: {\n    position: \"absolute\",\n    width: 70,\n    height: 70,\n    bottom: 40,\n    borderRadius: 50,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default CameraScreen;","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/CameraScreen.js"],"names":["React","useState","ProgressBarAndroidComponent","CameraPreview","Camera","CameraScreen","props","camera","setCamera","flashMode","setFlashMode","previewVisible","setPreviewVisible","capturedImage","setCapturedImage","Constants","Type","back","camType","setType","takePicture","takePictureAsync","photo","savePhoto","navigation","navigate","console","log","retakePhoto","styles","main","r","camCapBtnContainer","camCapBtn","StyleSheet","create","flex","width","height","alignSelf","alignItems","position","bottom","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, Button, Alert, TouchableOpacity, ProgressBarAndroidComponent } from \"react-native\";\r\n\r\nimport CameraPreview from \"../components/CameraPreview\";\r\nimport { Camera } from \"expo-camera\";\r\n\r\nconst CameraScreen = (props) => {\r\n\tconst [camera, setCamera] = useState(null);\r\n\tconst [flashMode, setFlashMode] = useState(\"off\");\r\n\tconst [previewVisible, setPreviewVisible] = useState(false);\r\n\tconst [capturedImage, setCapturedImage] = useState(null);\r\n\tconst [camType, setType] = useState(Camera.Constants.Type.back);\r\n\r\n\tconst takePicture = async () => {\r\n\t\t// if(!camera) return\r\n\t\tconst photo = await camera.takePictureAsync();\r\n\t\t// console.log(photo);\r\n\t\t// setStartCamera(false);\r\n\t\tsetPreviewVisible(true);\r\n\t\tsetCapturedImage(photo);\r\n\t};\r\n\r\n\tconst savePhoto = () => {\r\n\t\tsetPreviewVisible(false);\r\n\t\tprops.navigation.navigate(\"Home\");\r\n\t\tconsole.log(\"saved\");\r\n\t};\r\n\r\n\tconst retakePhoto = () => {\r\n\t\tsetCapturedImage(null);\r\n\t\tsetPreviewVisible(false);\r\n\t\tconsole.log(\"retake\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.main}>\r\n\t\t\t{previewVisible && capturedImage ? (\r\n\t\t\t\t<CameraPreview photo={capturedImage} savePhoto={savePhoto} retakePhoto={retakePhoto} />\r\n\t\t\t) : (\r\n\t\t\t\t<Camera style={styles.camera} type={camType} flashMode={flashMode} ref={(r) => setCamera(r)}>\r\n\t\t\t\t\t<View style={styles.camCapBtnContainer}>\r\n\t\t\t\t\t\t<TouchableOpacity onPress={takePicture} style={styles.camCapBtn} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Camera>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t},\r\n\tcamera: {\r\n\t\tflex: 1,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tcamCapBtnContainer: {\r\n\t\talignSelf: \"center\",\r\n\t\tflex: 1,\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcamCapBtn: {\r\n\t\tposition: \"absolute\",\r\n\t\twidth: 70,\r\n\t\theight: 70,\r\n\t\tbottom: 40,\r\n\t\tborderRadius: 50,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t},\r\n});\r\n\r\nexport default CameraScreen;\r\n"]},"metadata":{},"sourceType":"module"}