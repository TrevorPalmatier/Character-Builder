{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\CharacterCreationScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth, firestore } from \"../firebase\";\nimport textStyles from \"../styles/TextStyles\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { StackActions } from \"@react-navigation/routers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUID } from \"../redux/features/userSlice\";\nimport { setActiveCharacter } from \"../redux/features/characterSlice\";\nexport default function CharacterCreationScreen(props) {\n  var _this = this;\n\n  var _useState = useState([-1, -1, -1, -1, -1, -1]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statValues = _useState2[0],\n      setStatValues = _useState2[1];\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      health = _useState4[0],\n      setHealth = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      characterName = _useState6[0],\n      setCharacterName = _useState6[1];\n\n  var dispatch = useDispatch();\n  var uid = useSelector(selectUID);\n  var skills = [{\n    key: 0,\n    name: \"Acrobatics\",\n    prof: 0,\n    stat: 1\n  }, {\n    key: 1,\n    name: \"Animal Handling\",\n    prof: 0,\n    stat: 4\n  }, {\n    key: 2,\n    name: \"Arcana\",\n    prof: 0,\n    stat: 3\n  }, {\n    key: 3,\n    name: \"Athletics\",\n    prof: 0,\n    stat: 0\n  }, {\n    key: 4,\n    name: \"Deception\",\n    prof: 0,\n    stat: 5\n  }, {\n    key: 5,\n    name: \"History\",\n    prof: 0,\n    stat: 3\n  }, {\n    key: 6,\n    name: \"Insight\",\n    prof: 0,\n    stat: 4\n  }, {\n    key: 7,\n    name: \"Intimidation\",\n    prof: 0,\n    stat: 5\n  }, {\n    key: 8,\n    name: \"Investigation\",\n    prof: 0,\n    stat: 3\n  }, {\n    key: 9,\n    name: \"Medicine\",\n    prof: 0,\n    stat: 4\n  }, {\n    key: 10,\n    name: \"Nature\",\n    prof: 0,\n    stat: 3\n  }, {\n    key: 11,\n    name: \"Perception\",\n    prof: 0,\n    stat: 4\n  }, {\n    key: 12,\n    name: \"Performance\",\n    prof: 0,\n    stat: 5\n  }, {\n    key: 13,\n    name: \"Persuasion\",\n    prof: 0,\n    stat: 5\n  }, {\n    key: 14,\n    name: \"Religion\",\n    prof: 0,\n    stat: 4\n  }, {\n    key: 15,\n    name: \"Sleight of Hand\",\n    prof: 0,\n    stat: 1\n  }, {\n    key: 16,\n    name: \"Stealth\",\n    prof: 0,\n    stat: 1\n  }, {\n    key: 17,\n    name: \"Survival\",\n    prof: 0,\n    stat: 4\n  }];\n  var statNames = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\n\n  var handleStatInput = function handleStatInput(enteredText, index) {\n    var temp = statValues;\n\n    if (enteredText !== \"\") {\n      temp[index] = Number(enteredText);\n      setStatValues(temp);\n    } else {\n      temp[index] = -1;\n      setStatValues(temp);\n    }\n  };\n\n  var handleCreateCharacter = function handleCreateCharacter() {\n    for (var _iterator = _createForOfIteratorHelperLoose(statValues), _step; !(_step = _iterator()).done;) {\n      var value = _step.value;\n\n      if (value === -1) {\n        Alert.alert(\"Please fill in all stats\");\n        return;\n      }\n    }\n\n    if (characterName === \"\") {\n      Alert.alert(\"Please fill in a character name\");\n      return;\n    }\n\n    var character = {\n      name: characterName,\n      stats: statValues,\n      skills: skills,\n      maxHealth: health,\n      health: health\n    };\n    firestore.collection(\"users\").doc(uid).collection(\"characters\").add(character).then(function (result) {\n      result.get().then(function (snapshot) {\n        dispatch(setActiveCharacter({\n          data: snapshot.data(),\n          id: snapshot.id\n        }));\n        props.navigation.dispatch(StackActions.replace(\"CharacterPage\", {\n          name: characterName\n        }));\n      }).catch(function (error) {\n        Alert.alert(error);\n      });\n    }).catch(function (error) {\n      Alert.alert(error);\n    });\n  };\n\n  var handleNameInput = function handleNameInput(enteredText) {\n    if (enteredText !== \"\") {\n      setCharacterName(enteredText);\n    }\n  };\n\n  var handleHealthInput = function handleHealthInput(enteredText) {\n    var inputNum = Number(enteredText);\n\n    if (inputNum !== NaN && inputNum > 0) {\n      setHealth(Number(enteredText));\n    }\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    bounces: false,\n    contentContainerStyle: styles.main,\n    showsVerticalScrollIndicator: false,\n    style: {\n      backgroundColor: \"#404040\"\n    },\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.nameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }, \"Name:\"), React.createElement(TextInput, {\n    style: [styles.input, styles.nameInput],\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#a6a6a6\",\n    keyboardAppearance: \"dark\",\n    textAlign: \"center\",\n    onChangeText: function onChangeText(enteredText) {\n      handleNameInput(enteredText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.nameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }, \"Max Health:\"), React.createElement(TextInput, {\n    style: [styles.input, styles.healthInput],\n    placeholder: \"Enter Max Health\",\n    placeholderTextColor: \"#a6a6a6\",\n    keyboardType: \"numeric\",\n    keyboardAppearance: \"dark\",\n    textAlign: \"center\",\n    onChangeText: function onChangeText(enteredText) {\n      handleHealthInput(enteredText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.statContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, statNames.map(function (name, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.statBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: textStyles.mainText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, name), React.createElement(TextInput, {\n      style: [styles.input, styles.statInput],\n      maxLength: 2,\n      placeholder: \"Stat Value\",\n      placeholderTextColor: \"#a6a6a6\",\n      keyboardType: \"numeric\",\n      keyboardAppearance: \"dark\",\n      textAlign: \"center\",\n      onChangeText: function onChangeText(enteredText) {\n        handleStatInput(enteredText, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }));\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: styles.pressable,\n    onPress: handleCreateCharacter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"Create Character\")))));\n}\nvar styles = StyleSheet.create({\n  main: {\n    backgroundColor: \"#404040\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  statContainer: {\n    paddingTop: 10,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    paddingBottom: 10,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 0.5\n  },\n  input: {\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"white\",\n    color: \"white\",\n    backgroundColor: \"#353535\"\n  },\n  nameInput: {\n    width: \"80%\"\n  },\n  statInput: {\n    width: \"80%\"\n  },\n  healthInput: {\n    width: \"60%\"\n  },\n  statBox: {\n    backgroundColor: \"#29293d\",\n    minWidth: 135,\n    maxWidth: 140,\n    minHeight: 135,\n    maxHeight: 140,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"white\",\n    borderWidth: 2,\n    padding: 10,\n    marginTop: 20\n  },\n  nameContainer: {\n    margin: 10,\n    marginBottom: 0,\n    width: \"90%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 0.5,\n    paddingBottom: 10\n  },\n  buttonContainer: {\n    width: \"90%\",\n    height: 50,\n    backgroundColor: \"#29293d\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    marginTop: 10,\n    marginBottom: 50\n  },\n  pressable: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/CharacterCreationScreen.js"],"names":["React","useState","auth","firestore","textStyles","KeyboardAwareScrollView","StackActions","useDispatch","useSelector","selectUID","setActiveCharacter","CharacterCreationScreen","props","statValues","setStatValues","health","setHealth","characterName","setCharacterName","dispatch","uid","skills","key","name","prof","stat","statNames","handleStatInput","enteredText","index","temp","Number","handleCreateCharacter","value","Alert","alert","character","stats","maxHealth","collection","doc","add","then","result","get","snapshot","data","id","navigation","replace","catch","error","handleNameInput","handleHealthInput","inputNum","NaN","styles","main","backgroundColor","x","y","nameContainer","mainText","input","nameInput","healthInput","statContainer","map","statBox","statInput","buttonContainer","pressable","StyleSheet","create","width","alignItems","paddingTop","flexWrap","flexDirection","justifyContent","paddingBottom","borderBottomColor","borderBottomWidth","padding","margin","borderWidth","borderColor","color","minWidth","maxWidth","minHeight","maxHeight","marginTop","marginBottom","height","borderRadius","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, Pressable, Alert } from \"react-native\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport textStyles from \"../styles/TextStyles\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { StackActions } from \"@react-navigation/routers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUID } from \"../redux/features/userSlice\";\r\nimport { setActiveCharacter } from \"../redux/features/characterSlice\";\r\n\r\nexport default function CharacterCreationScreen(props) {\r\n\tconst [statValues, setStatValues] = useState([-1, -1, -1, -1, -1, -1]);\r\n\tconst [health, setHealth] = useState(-1);\r\n\tconst [characterName, setCharacterName] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\tconst uid = useSelector(selectUID);\r\n\tconst skills = [\r\n\t\t{ key: 0, name: \"Acrobatics\", prof: 0, stat: 1 },\r\n\t\t{ key: 1, name: \"Animal Handling\", prof: 0, stat: 4 },\r\n\t\t{ key: 2, name: \"Arcana\", prof: 0, stat: 3 },\r\n\t\t{ key: 3, name: \"Athletics\", prof: 0, stat: 0 },\r\n\t\t{ key: 4, name: \"Deception\", prof: 0, stat: 5 },\r\n\t\t{ key: 5, name: \"History\", prof: 0, stat: 3 },\r\n\t\t{ key: 6, name: \"Insight\", prof: 0, stat: 4 },\r\n\t\t{ key: 7, name: \"Intimidation\", prof: 0, stat: 5 },\r\n\t\t{ key: 8, name: \"Investigation\", prof: 0, stat: 3 },\r\n\t\t{ key: 9, name: \"Medicine\", prof: 0, stat: 4 },\r\n\t\t{ key: 10, name: \"Nature\", prof: 0, stat: 3 },\r\n\t\t{ key: 11, name: \"Perception\", prof: 0, stat: 4 },\r\n\t\t{ key: 12, name: \"Performance\", prof: 0, stat: 5 },\r\n\t\t{ key: 13, name: \"Persuasion\", prof: 0, stat: 5 },\r\n\t\t{ key: 14, name: \"Religion\", prof: 0, stat: 4 },\r\n\t\t{ key: 15, name: \"Sleight of Hand\", prof: 0, stat: 1 },\r\n\t\t{ key: 16, name: \"Stealth\", prof: 0, stat: 1 },\r\n\t\t{ key: 17, name: \"Survival\", prof: 0, stat: 4 },\r\n\t];\r\n\r\n\tconst statNames = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n\r\n\tconst handleStatInput = (enteredText, index) => {\r\n\t\tconst temp = statValues;\r\n\t\tif (enteredText !== \"\") {\r\n\t\t\ttemp[index] = Number(enteredText);\r\n\t\t\tsetStatValues(temp);\r\n\t\t} else {\r\n\t\t\ttemp[index] = -1;\r\n\t\t\tsetStatValues(temp);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCreateCharacter = () => {\r\n\t\tfor (const value of statValues) {\r\n\t\t\tif (value === -1) {\r\n\t\t\t\tAlert.alert(\"Please fill in all stats\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (characterName === \"\") {\r\n\t\t\tAlert.alert(\"Please fill in a character name\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst character = { name: characterName, stats: statValues, skills, maxHealth: health, health };\r\n\r\n\t\tfirestore\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(uid)\r\n\t\t\t.collection(\"characters\")\r\n\t\t\t.add(character)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresult\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\t\tdispatch(setActiveCharacter({ data: snapshot.data(), id: snapshot.id }));\r\n\t\t\t\t\t\tprops.navigation.dispatch(StackActions.replace(\"CharacterPage\", { name: characterName }));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tAlert.alert(error);\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tAlert.alert(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleNameInput = (enteredText) => {\r\n\t\tif (enteredText !== \"\") {\r\n\t\t\tsetCharacterName(enteredText);\r\n\t\t}\r\n\t};\r\n\tconst handleHealthInput = (enteredText) => {\r\n\t\tconst inputNum = Number(enteredText);\r\n\t\tif (inputNum !== NaN && inputNum > 0) {\r\n\t\t\tsetHealth(Number(enteredText));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\t// keyboardDismissMode='on-drag'\r\n\t\t\tbounces={false}\r\n\t\t\tcontentContainerStyle={styles.main}\r\n\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\tstyle={{ backgroundColor: \"#404040\" }}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={styles.main}>\r\n\t\t\t\t<View style={styles.nameContainer}>\r\n\t\t\t\t\t<Text style={textStyles.mainText}>Name:</Text>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={[styles.input, styles.nameInput]}\r\n\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\tkeyboardAppearance='dark'\r\n\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\tonChangeText={(enteredText) => {\r\n\t\t\t\t\t\t\thandleNameInput(enteredText);\r\n\t\t\t\t\t\t}}></TextInput>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.nameContainer}>\r\n\t\t\t\t\t<Text style={textStyles.mainText}>Max Health:</Text>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={[styles.input, styles.healthInput]}\r\n\t\t\t\t\t\tplaceholder='Enter Max Health'\r\n\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\tkeyboardType='numeric'\r\n\t\t\t\t\t\tkeyboardAppearance='dark'\r\n\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\tonChangeText={(enteredText) => {\r\n\t\t\t\t\t\t\thandleHealthInput(enteredText);\r\n\t\t\t\t\t\t}}></TextInput>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.statContainer}>\r\n\t\t\t\t\t{statNames.map((name, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View key={index} style={styles.statBox}>\r\n\t\t\t\t\t\t\t\t<Text style={textStyles.mainText}>{name}</Text>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\tstyle={[styles.input, styles.statInput]}\r\n\t\t\t\t\t\t\t\t\tmaxLength={2}\r\n\t\t\t\t\t\t\t\t\tplaceholder='Stat Value'\r\n\t\t\t\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\t\t\t\tkeyboardType='numeric'\r\n\t\t\t\t\t\t\t\t\tkeyboardAppearance='dark'\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tonChangeText={(enteredText) => {\r\n\t\t\t\t\t\t\t\t\t\thandleStatInput(enteredText, index);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t\t<Pressable style={styles.pressable} onPress={handleCreateCharacter}>\r\n\t\t\t\t\t\t<Text style={textStyles.mainText}>Create Character</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tstatContainer: {\r\n\t\tpaddingTop: 10,\r\n\t\tflexWrap: \"wrap\",\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingBottom: 10,\r\n\t\tborderBottomColor: \"gray\",\r\n\t\tborderBottomWidth: 0.5,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"white\",\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"#353535\",\r\n\t},\r\n\tnameInput: {\r\n\t\twidth: \"80%\",\r\n\t},\r\n\tstatInput: {\r\n\t\twidth: \"80%\",\r\n\t},\r\n\thealthInput: {\r\n\t\twidth: \"60%\",\r\n\t},\r\n\tstatBox: {\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tminWidth: 135,\r\n\t\tmaxWidth: 140,\r\n\t\tminHeight: 135,\r\n\t\tmaxHeight: 140,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tborderColor: \"white\",\r\n\t\tborderWidth: 2,\r\n\t\tpadding: 10,\r\n\t\tmarginTop: 20,\r\n\t},\r\n\tnameContainer: {\r\n\t\tmargin: 10,\r\n\t\tmarginBottom: 0,\r\n\t\twidth: \"90%\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tborderBottomColor: \"gray\",\r\n\t\tborderBottomWidth: 0.5,\r\n\t\tpaddingBottom: 10,\r\n\t},\r\n\tbuttonContainer: {\r\n\t\twidth: \"90%\",\r\n\t\theight: 50,\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tborderRadius: 5,\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 50,\r\n\t},\r\n\tpressable: {\r\n\t\tflex: 1,\r\n\t\twidth: \"100%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}