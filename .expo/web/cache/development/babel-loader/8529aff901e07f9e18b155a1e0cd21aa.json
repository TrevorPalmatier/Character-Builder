{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\App.js\",\n    _this = this;\n\nimport React, { useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport \"react-native-gesture-handler\";\nimport CharacterWindow from \"./Screens/CharacterWindow\";\nimport CameraScreen from \"./Screens/CameraScreen\";\nimport Landing from \"./Screens/Landing\";\nimport * as screens from \"./Screens/Screens\";\nimport { selectUserEmail, selectUserName } from \"./redux/features/userSlice\";\nimport CharacterSelectScreen from \"./Screens/CharacterSelectScreen\";\nimport CharacterCreation from \"./Screens/CharacterCreationScreen\";\nimport CharacterCreationScreen from \"./Screens/CharacterCreationScreen\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar Main = function Main(props) {\n  var userName = useSelector(selectUserName);\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Landing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, userName ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"CharacterSelect\",\n    component: CharacterSelectScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CharacterPage\",\n    component: CharacterWindow,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CharacterCreation\",\n    component: CharacterCreationScreen,\n    options: {\n      presentation: \"modal\",\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Camera\",\n    component: CameraScreen,\n    options: {\n      title: \"Camera\",\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Landing\",\n    component: Landing,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: screens.Register,\n    options: {\n      headerTitle: \"Register\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: screens.Login,\n    options: {\n      headerTitle: \"Log In\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/App.js"],"names":["React","useEffect","StatusBar","NavigationContainer","createNativeStackNavigator","Provider","useDispatch","useSelector","store","CharacterWindow","CameraScreen","Landing","screens","selectUserEmail","selectUserName","CharacterSelectScreen","CharacterCreation","CharacterCreationScreen","GestureHandlerRootView","Stack","App","Main","props","userName","headerShown","presentation","title","Register","headerTitle","Login","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport \"react-native-gesture-handler\";\n\nimport CharacterWindow from \"./Screens/CharacterWindow\";\nimport CameraScreen from \"./Screens/CameraScreen\";\nimport Landing from \"./Screens/Landing\";\nimport * as screens from \"./Screens/Screens\";\nimport { selectUserEmail, selectUserName } from \"./redux/features/userSlice\";\nimport CharacterSelectScreen from \"./Screens/CharacterSelectScreen\";\nimport CharacterCreation from \"./Screens/CharacterCreationScreen\";\nimport CharacterCreationScreen from \"./Screens/CharacterCreationScreen\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\n\nconst Stack = createNativeStackNavigator();\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default function App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Main />\n\t\t</Provider>\n\t);\n}\n\nconst Main = (props) => {\n\tconst userName = useSelector(selectUserName);\n\t// const userEmail = useSelector(selectUserEmail);\n\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Stack.Navigator initialRouteName='Landing'>\n\t\t\t\t{userName ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Stack.Screen name='CharacterSelect' component={CharacterSelectScreen} />\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname='CharacterPage'\n\t\t\t\t\t\t\tcomponent={CharacterWindow}\n\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname='CharacterCreation'\n\t\t\t\t\t\t\tcomponent={CharacterCreationScreen}\n\t\t\t\t\t\t\toptions={{ presentation: \"modal\", headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname='Camera'\n\t\t\t\t\t\t\tcomponent={CameraScreen}\n\t\t\t\t\t\t\toptions={{ title: \"Camera\", headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Stack.Screen name='Landing' component={Landing} options={{ headerShown: false }} />\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname='Register'\n\t\t\t\t\t\t\tcomponent={screens.Register}\n\t\t\t\t\t\t\toptions={{ headerTitle: \"Register\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Stack.Screen name='Login' component={screens.Login} options={{ headerTitle: \"Log In\" }} />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack.Navigator>\n\t\t</NavigationContainer>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}