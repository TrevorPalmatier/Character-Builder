{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\CharacterSelectScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { firestore, auth } from \"../firebase\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useFocusEffect } from \"@react-navigation/core\";\nimport textStyles from \"../styles/TextStyles\";\nimport CharacterCard from \"../components/CharacterCard\";\nexport default function CharacterSelectScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  useFocusEffect(React.useCallback(function () {\n    console.log(\"hit\");\n    firestore.collection(\"users\").doc(auth.currentUser.uid).collection(\"characters\").get().then(function (snapshot) {\n      var thing = snapshot.docs;\n      setCharacters(thing);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []));\n\n  var selectCharacter = function selectCharacter(index) {\n    props.navigation.navigate(\"CharacterPage\", {\n      character: characters[index].data()\n    });\n  };\n\n  var handleNewCharacter = function handleNewCharacter() {\n    props.navigation.navigate(\"CharacterCreation\");\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(CharacterCard, {\n      key: item.id,\n      index: index,\n      name: item.data().name,\n      select: selectCharacter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    ItemSeparatorComponent: Platform.OS !== \"android\" && function (_ref2) {\n      var highlighted = _ref2.highlighted;\n      return React.createElement(View, {\n        style: [styles.separator, highlighted && {\n          marginLeft: 0\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }\n      });\n    },\n    style: {\n      width: \"100%\",\n      backgroundColor: \"#404040\"\n    },\n    contentContainerStyle: styles.container,\n    showsVerticalScrollIndicator: false,\n    data: characters,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      handleNewCharacter();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \" New Character\"))));\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: \"#404040\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  container: {\n    paddingTop: 20,\n    flexDirection: \"column\",\n    backgroundColor: \"#404040\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  buttonContainer: {\n    width: \"100%\",\n    height: 120,\n    alignItems: \"center\"\n  },\n  button: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"90%\",\n    height: 60,\n    backgroundColor: \"#29293d\",\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/CharacterSelectScreen.js"],"names":["React","useEffect","useState","firestore","auth","useFocusEffect","textStyles","CharacterCard","CharacterSelectScreen","props","characters","setCharacters","useCallback","console","log","collection","doc","currentUser","uid","get","then","snapshot","thing","docs","catch","error","selectCharacter","index","navigation","navigate","character","data","handleNewCharacter","renderItem","item","id","name","styles","main","Platform","OS","highlighted","separator","marginLeft","width","backgroundColor","container","buttonContainer","button","mainText","StyleSheet","create","flex","height","alignItems","paddingTop","flexDirection","justifyContent","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { firestore, auth } from \"../firebase\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, FlatList, Platform } from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/core\";\r\nimport textStyles from \"../styles/TextStyles\";\r\nimport CharacterCard from \"../components/CharacterCard\";\r\n\r\nexport default function CharacterSelectScreen(props) {\r\n\tconst [characters, setCharacters] = useState([]);\r\n\r\n\tuseFocusEffect(\r\n\t\tReact.useCallback(() => {\r\n\t\t\tconsole.log(\"hit\");\r\n\t\t\tfirestore\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(auth.currentUser.uid)\r\n\t\t\t\t.collection(\"characters\")\r\n\t\t\t\t.get()\r\n\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\tconst thing = snapshot.docs;\r\n\t\t\t\t\tsetCharacters(thing);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}, [])\r\n\t);\r\n\r\n\tconst selectCharacter = (index) => {\r\n\t\tprops.navigation.navigate(\"CharacterPage\", {\r\n\t\t\tcharacter: characters[index].data(),\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleNewCharacter = () => {\r\n\t\tprops.navigation.navigate(\"CharacterCreation\");\r\n\t};\r\n\r\n\tconst renderItem = ({ item, index }) => {\r\n\t\treturn <CharacterCard key={item.id} index={index} name={item.data().name} select={selectCharacter} />;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.main}>\r\n\t\t\t{/* <ScrollView\r\n\t\t\t\tstyle={{ width: \"100%\", backgroundColor: \"#404040\" }}\r\n\t\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\t\tshowsVerticalScrollIndicator={false}>\r\n\t\t\t\t{characters.map((character, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CharacterCard\r\n\t\t\t\t\t\t\tkey={character.id}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tname={character.data().name}\r\n\t\t\t\t\t\t\tselect={selectCharacter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ScrollView> */}\r\n\t\t\t<FlatList\r\n\t\t\t\tItemSeparatorComponent={\r\n\t\t\t\t\tPlatform.OS !== \"android\" &&\r\n\t\t\t\t\t(({ highlighted }) => <View style={[styles.separator, highlighted && { marginLeft: 0 }]} />)\r\n\t\t\t\t}\r\n\t\t\t\tstyle={{ width: \"100%\", backgroundColor: \"#404040\" }}\r\n\t\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\tdata={characters}\r\n\t\t\t\trenderItem={renderItem}\r\n\t\t\t/>\r\n\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\thandleNewCharacter();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Text style={textStyles.mainText}> New Character</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcontainer: {\r\n\t\tpaddingTop: 20,\r\n\t\tflexDirection: \"column\",\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 120,\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tbutton: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"90%\",\r\n\t\theight: 60,\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tmargin: 10,\r\n\t},\r\n\t// separator: {\r\n\t// \tborderBottomColor: \"#666\",\r\n\t// \tborderBottomWidth: 1,\r\n\t// },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}