{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth, firebase } from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveUser } from \"../redux/features/userSlice\";\n\nfunction Login(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var login = function login() {\n    auth.signInWithEmailAndPassword(email, password).then(function (result) {\n      firebase.firestore().collection(\"users\").doc(result.user.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          console.log(snapshot.data());\n          dispatch(setActiveUser(snapshot.data()));\n        }\n      });\n    }).catch(function (error) {\n      Alert.alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"email-address\",\n    placeholder: \"email\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(pw) {\n      return setPassword(pw);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Log In\",\n    onPress: function onPress() {\n      return login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    color: \"black\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/Login.js"],"names":["React","useState","auth","firebase","useDispatch","setActiveUser","Login","props","email","setEmail","password","setPassword","dispatch","login","signInWithEmailAndPassword","then","result","firestore","collection","doc","user","uid","get","snapshot","exists","console","log","data","catch","error","Alert","alert","styles","container","input","pw","StyleSheet","create","flex","paddingTop","backgroundColor","alignItems","width","padding","margin","borderWidth","borderColor","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACrB,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,MAAMS,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnBX,IAAAA,IAAI,CAACY,0BAAL,CAAgCN,KAAhC,EAAuCE,QAAvC,EACEK,IADF,CACO,UAACC,MAAD,EAAY;AACjBb,MAAAA,QAAQ,CACNc,SADF,GAEEC,UAFF,CAEa,OAFb,EAGEC,GAHF,CAGMH,MAAM,CAACI,IAAP,CAAYC,GAHlB,EAIEC,GAJF,GAKEP,IALF,CAKO,UAACQ,QAAD,EAAc;AACnB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,EAAZ;AACAf,UAAAA,QAAQ,CAACP,aAAa,CAACkB,QAAQ,CAACI,IAAT,EAAD,CAAd,CAAR;AACA;AACD,OAVF;AAWA,KAbF,EAcEC,KAdF,CAcQ,UAACC,KAAD,EAAW;AACjBC,MAAAA,KAAK,CAACC,KAAN,CAAYF,KAAZ;AACA,KAhBF;AAiBA,GAlBD;;AAoBA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAED,MAAM,CAACE,KADf;AAEC,IAAA,YAAY,EAAC,eAFd;AAGC,IAAA,WAAW,EAAC,OAHb;AAIC,IAAA,YAAY,EAAE,sBAAC1B,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEwB,MAAM,CAACE,KADf;AAEC,IAAA,WAAW,EAAC,UAFb;AAGC,IAAA,eAAe,EAAE,IAHlB;AAIC,IAAA,YAAY,EAAE,sBAACC,EAAD;AAAA,aAAQxB,WAAW,CAACwB,EAAD,CAAnB;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAaC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAMtB,KAAK,EAAX;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CADD;AAiBA;;AAED,IAAMmB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,SAAS,EAAE;AACVK,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,eAAe,EAAE,MAHP;AAIVC,IAAAA,UAAU,EAAE;AAJF,GADqB;AAOhCP,EAAAA,KAAK,EAAE;AACNQ,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE,OALP;AAMNC,IAAAA,KAAK,EAAE;AAND;AAPyB,CAAlB,CAAf;AAiBA,eAAezC,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextInput, View, StyleSheet, Alert } from \"react-native\";\r\nimport { auth, firebase } from \"../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setActiveUser } from \"../redux/features/userSlice\";\r\n\r\nfunction Login(props) {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst login = () => {\r\n\t\tauth.signInWithEmailAndPassword(email, password)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tfirebase\r\n\t\t\t\t\t.firestore()\r\n\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t.doc(result.user.uid)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\t\tif (snapshot.exists) {\r\n\t\t\t\t\t\t\tconsole.log(snapshot.data());\r\n\t\t\t\t\t\t\tdispatch(setActiveUser(snapshot.data()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tAlert.alert(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\tplaceholder='email'\r\n\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='password'\r\n\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\tonChangeText={(pw) => setPassword(pw)}\r\n\t\t\t/>\r\n\t\t\t<Button title='Log In' onPress={() => login()} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 50,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"black\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}