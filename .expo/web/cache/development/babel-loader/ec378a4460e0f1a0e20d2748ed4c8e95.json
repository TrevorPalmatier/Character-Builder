{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\CharacterCreationScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth, firestore } from \"../firebase\";\nimport textStyles from \"../styles/TextStyles\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { StackActions } from \"@react-navigation/routers\";\nexport default function CharacterCreationScreen(props) {\n  var _this = this;\n\n  var _useState = useState([-1, -1, -1, -1, -1, -1]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statValues = _useState2[0],\n      setStatValues = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      characterName = _useState4[0],\n      setCharacterName = _useState4[1];\n\n  var statNames = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\n\n  var handleStatInput = function handleStatInput(enteredText, index) {\n    var temp = statValues;\n\n    if (enteredText !== \"\") {\n      temp[index] = Number(enteredText);\n      setStatValues(temp);\n    } else {\n      temp[index] = -1;\n      setStatValues(temp);\n    }\n  };\n\n  var handleCreateCharacter = function handleCreateCharacter() {\n    for (var _iterator = _createForOfIteratorHelperLoose(statValues), _step; !(_step = _iterator()).done;) {\n      var value = _step.value;\n\n      if (value === -1) {\n        Alert.alert(\"Please fill in all stats\");\n        return;\n      }\n    }\n\n    if (characterName === \"\") {\n      Alert.alert(\"Please fill in a character name\");\n      return;\n    }\n\n    firestore.collection(\"users\").doc(auth.currentUser.uid).collection(\"characters\").add({\n      name: characterName,\n      stats: statValues\n    }).then(function (result) {\n      result.get().then(function (snapshot) {\n        props.navigation.dispatch(StackActions.replace(\"CharacterPage\", {\n          character: snapshot.data()\n        }));\n      }).catch(function (error) {\n        Alert.alert(error);\n      });\n    }).catch(function (error) {\n      Alert.alert(error);\n    });\n  };\n\n  var handleNameInput = function handleNameInput(enteredText) {\n    if (enteredText !== \"\") {\n      setCharacterName(enteredText);\n    }\n  };\n\n  var checkStats = function checkStats() {\n    console.log(statValues);\n    console.log(characterName);\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    keyboardDismissMode: \"on-drag\",\n    bounces: false,\n    contentContainerStyle: styles.main,\n    style: {\n      backgroundColor: \"#404040\"\n    },\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.nameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \"Name:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#a6a6a6\",\n    keyboardAppearance: \"dark\",\n    textAlign: \"center\",\n    onChangeText: function onChangeText(enteredText) {\n      handleNameInput(enteredText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.statContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, statNames.map(function (name, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.statBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: textStyles.mainText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, name), React.createElement(TextInput, {\n      style: styles.input,\n      maxLength: 2,\n      placeholder: \"Stat Value\",\n      placeholderTextColor: \"#a6a6a6\",\n      keyboardType: \"numeric\",\n      textAlign: \"center\",\n      onChangeText: function onChangeText(enteredText) {\n        handleStatInput(enteredText, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: styles.pressable,\n    onPress: handleCreateCharacter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: textStyles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Check Stats\")))));\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: \"#404040\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  statContainer: {\n    flex: 1,\n    paddingTop: 20,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"white\",\n    color: \"white\"\n  },\n  statBox: {\n    backgroundColor: \"#29293d\",\n    minWidth: 135,\n    maxWidth: 140,\n    minHeight: 135,\n    maxHeight: 140,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"white\",\n    borderWidth: 2,\n    padding: 10,\n    marginTop: 20\n  },\n  nameContainer: {\n    margin: 10,\n    marginBottom: 0,\n    width: \"90%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonContainer: {\n    width: \"90%\",\n    height: 50,\n    bottom: 70,\n    backgroundColor: \"#29293d\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5\n  },\n  pressable: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/CharacterCreationScreen.js"],"names":["React","useState","auth","firestore","textStyles","KeyboardAwareScrollView","StackActions","CharacterCreationScreen","props","statValues","setStatValues","characterName","setCharacterName","statNames","handleStatInput","enteredText","index","temp","Number","handleCreateCharacter","value","Alert","alert","collection","doc","currentUser","uid","add","name","stats","then","result","get","snapshot","navigation","dispatch","replace","character","data","catch","error","handleNameInput","checkStats","console","log","styles","main","backgroundColor","x","y","nameContainer","mainText","input","statContainer","map","statBox","buttonContainer","pressable","StyleSheet","create","flex","width","height","alignItems","paddingTop","flexWrap","flexDirection","justifyContent","padding","margin","borderWidth","borderColor","color","minWidth","maxWidth","minHeight","maxHeight","marginTop","marginBottom","bottom","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, Pressable, Alert } from \"react-native\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport textStyles from \"../styles/TextStyles\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { StackActions } from \"@react-navigation/routers\";\r\n\r\nexport default function CharacterCreationScreen(props) {\r\n\tconst [statValues, setStatValues] = useState([-1, -1, -1, -1, -1, -1]);\r\n\tconst [characterName, setCharacterName] = useState(\"\");\r\n\r\n\tconst statNames = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n\r\n\tconst handleStatInput = (enteredText, index) => {\r\n\t\tconst temp = statValues;\r\n\t\tif (enteredText !== \"\") {\r\n\t\t\ttemp[index] = Number(enteredText);\r\n\t\t\tsetStatValues(temp);\r\n\t\t} else {\r\n\t\t\ttemp[index] = -1;\r\n\t\t\tsetStatValues(temp);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCreateCharacter = () => {\r\n\t\tfor (const value of statValues) {\r\n\t\t\tif (value === -1) {\r\n\t\t\t\tAlert.alert(\"Please fill in all stats\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (characterName === \"\") {\r\n\t\t\tAlert.alert(\"Please fill in a character name\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// console.log(\"through\");\r\n\t\tfirestore\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(auth.currentUser.uid)\r\n\t\t\t.collection(\"characters\")\r\n\t\t\t.add({ name: characterName, stats: statValues })\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresult\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then((snapshot) => {\r\n\t\t\t\t\t\tprops.navigation.dispatch(\r\n\t\t\t\t\t\t\tStackActions.replace(\"CharacterPage\", { character: snapshot.data() })\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tAlert.alert(error);\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tAlert.alert(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleNameInput = (enteredText) => {\r\n\t\tif (enteredText !== \"\") {\r\n\t\t\tsetCharacterName(enteredText);\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkStats = () => {\r\n\t\tconsole.log(statValues);\r\n\t\tconsole.log(characterName);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\tkeyboardDismissMode='on-drag'\r\n\t\t\tbounces={false}\r\n\t\t\tcontentContainerStyle={styles.main}\r\n\t\t\tstyle={{ backgroundColor: \"#404040\" }}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={styles.main}>\r\n\t\t\t\t<View style={styles.nameContainer}>\r\n\t\t\t\t\t<Text style={textStyles.mainText}>Name:</Text>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\tkeyboardAppearance='dark'\r\n\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\tonChangeText={(enteredText) => {\r\n\t\t\t\t\t\t\thandleNameInput(enteredText);\r\n\t\t\t\t\t\t}}></TextInput>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.statContainer}>\r\n\t\t\t\t\t{statNames.map((name, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View key={index} style={styles.statBox}>\r\n\t\t\t\t\t\t\t\t<Text style={textStyles.mainText}>{name}</Text>\r\n\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\t\t\tmaxLength={2}\r\n\t\t\t\t\t\t\t\t\tplaceholder='Stat Value'\r\n\t\t\t\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\t\t\t\tkeyboardType='numeric'\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tonChangeText={(enteredText) => {\r\n\t\t\t\t\t\t\t\t\t\thandleStatInput(enteredText, index);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t\t<Pressable style={styles.pressable} onPress={handleCreateCharacter}>\r\n\t\t\t\t\t\t<Text style={textStyles.mainText}>Check Stats</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tstatContainer: {\r\n\t\tflex: 1,\r\n\t\tpaddingTop: 20,\r\n\t\tflexWrap: \"wrap\",\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"white\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tstatBox: {\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tminWidth: 135,\r\n\t\tmaxWidth: 140,\r\n\t\tminHeight: 135,\r\n\t\tmaxHeight: 140,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tborderColor: \"white\",\r\n\t\tborderWidth: 2,\r\n\t\tpadding: 10,\r\n\t\tmarginTop: 20,\r\n\t},\r\n\tnameContainer: {\r\n\t\tmargin: 10,\r\n\t\tmarginBottom: 0,\r\n\t\twidth: \"90%\",\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\twidth: \"90%\",\r\n\t\theight: 50,\r\n\t\tbottom: 70,\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tpressable: {\r\n\t\tflex: 1,\r\n\t\twidth: \"100%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}