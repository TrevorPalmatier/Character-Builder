{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\Register.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"firebase\";\n\nfunction Register(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameText = _useState2[0],\n      setNameText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailText = _useState4[0],\n      setEmailText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordText = _useState6[0],\n      setPasswordText = _useState6[1];\n\n  var onSignUp = function onSignUp() {\n    firebase.auth().createUserWithEmailAndPassword(emailText, passwordText).then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(name) {\n      return setNameText(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"email-address\",\n    placeholder: \"email\",\n    onChangeText: function onChangeText(email) {\n      return setEmailText(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(pw) {\n      return setPasswordText(pw);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Register\",\n    onPress: function onPress() {\n      return onSignUp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    color: \"black\"\n  }\n});\nexport default Register;","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/Register.js"],"names":["React","useState","firebase","Register","props","nameText","setNameText","emailText","setEmailText","passwordText","setPasswordText","onSignUp","auth","createUserWithEmailAndPassword","then","result","console","log","catch","error","styles","container","input","name","email","pw","StyleSheet","create","flex","backgroundColor","justifyContent","width","padding","margin","borderWidth","borderColor","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCL,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwCP,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtBT,IAAAA,QAAQ,CACNU,IADF,GAEEC,8BAFF,CAEiCN,SAFjC,EAE4CE,YAF5C,EAGEK,IAHF,CAGO,UAACC,MAAD,EAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,KALF,EAMEG,KANF,CAMQ,UAACC,KAAD,EAAW;AACjBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,KARF;AASA,GAVD;;AAYA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAED,MAAM,CAACE,KAAzB;AAAgC,IAAA,WAAW,EAAC,MAA5C;AAAmD,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUjB,WAAW,CAACiB,IAAD,CAArB;AAAA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEH,MAAM,CAACE,KADf;AAEC,IAAA,YAAY,EAAC,eAFd;AAGC,IAAA,WAAW,EAAC,OAHb;AAIC,IAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,aAAWhB,YAAY,CAACgB,KAAD,CAAvB;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAQC,oBAAC,SAAD;AACC,IAAA,KAAK,EAAEJ,MAAM,CAACE,KADf;AAEC,IAAA,WAAW,EAAC,UAFb;AAGC,IAAA,eAAe,EAAE,IAHlB;AAIC,IAAA,YAAY,EAAE,sBAACG,EAAD;AAAA,aAAQf,eAAe,CAACe,EAAD,CAAvB;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,EAcC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMd,QAAQ,EAAd;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdD,CADD;AAkBA;;AAED,IAAMS,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,SAAS,EAAE;AACVO,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,cAAc,EAAE;AAHN,GADqB;AAMhCR,EAAAA,KAAK,EAAE;AACNS,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE,OALP;AAMNC,IAAAA,KAAK,EAAE;AAND;AANyB,CAAlB,CAAf;AAgBA,eAAejC,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextInput, View, StyleSheet } from \"react-native\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Register(props) {\r\n\tconst [nameText, setNameText] = useState(\"\");\r\n\tconst [emailText, setEmailText] = useState(\"\");\r\n\tconst [passwordText, setPasswordText] = useState(\"\");\r\n\r\n\tconst onSignUp = () => {\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(emailText, passwordText)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<TextInput style={styles.input} placeholder='name' onChangeText={(name) => setNameText(name)} />\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\tplaceholder='email'\r\n\t\t\t\tonChangeText={(email) => setEmailText(email)}\r\n\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tplaceholder='password'\r\n\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\tonChangeText={(pw) => setPasswordText(pw)}\r\n\t\t\t/>\r\n\t\t\t<Button title='Register' onPress={() => onSignUp()} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"black\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n});\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}