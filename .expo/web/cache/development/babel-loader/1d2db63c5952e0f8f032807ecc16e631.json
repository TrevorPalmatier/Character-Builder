{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Documents\\\\1 - Resume Projects\\\\Personal Project 481\\\\characterBuilder\\\\Screens\\\\HealthScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCharacter, selectID, setActiveCharacter } from \"../redux/features/characterSlice\";\nexport default function HealthScreen(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(useSelector(selectCharacter)),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var _useState3 = useState(route.params.nums),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemList = _useState4[0],\n      setItemList = _useState4[1];\n\n  var _useState5 = useState(99),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItem = _useState6[0],\n      setSelectedItem = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      input = _useState8[0],\n      setInput = _useState8[1];\n\n  var id = useSelector(selectID);\n  var dispatch = useDispatch();\n\n  var handleValueChange = function handleValueChange(value) {\n    setSelectedItem(value);\n    setInput((100 - value).toString());\n  };\n\n  var handleHeal = function handleHeal(value) {\n    var newChar = _objectSpread({}, character);\n\n    var maxHealth = character.maxHealth;\n    var newHealth = character.health + value;\n\n    if (newHealth >= maxHealth) {\n      newChar.health = maxHealth;\n    } else {\n      newChar.health = newHealth;\n    }\n\n    setCharacter(newChar);\n    dispatch(setActiveCharacter({\n      data: newChar,\n      id: id\n    }));\n  };\n\n  var handleDmg = function handleDmg(value) {\n    var newChar = _objectSpread({}, character);\n\n    var newHealth = character.health - value;\n\n    if (newHealth <= 0) {\n      newChar.health = 0;\n    } else {\n      newChar.health = newHealth;\n    }\n\n    setCharacter(newChar);\n    console.log(newChar);\n    dispatch(setActiveCharacter({\n      data: newChar,\n      id: id\n    }));\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    style: {\n      backgroundColor: \"#404040\"\n    },\n    contentContainerStyle: styles.main,\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerTitleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"HP Management\"))), React.createElement(View, {\n    style: styles.hpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.hpBox],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.hpNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, character.health), React.createElement(Text, {\n    style: styles.hpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Current HP\")), React.createElement(View, {\n    style: styles.dashBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#aaa\",\n      fontSize: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"/\")), React.createElement(View, {\n    style: [styles.hpBox, {\n      backgroundColor: \"#404040\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.hpNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, character.maxHealth), React.createElement(Text, {\n    style: styles.hpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Maximum HP\")), React.createElement(View, {\n    style: styles.modContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Pressable, {\n    style: styles.healButton,\n    onPress: function onPress() {\n      handleHeal(Number(input));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"HEAL\")), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#a6a6a6\",\n    textAlign: \"center\",\n    returnKeyType: \"done\",\n    keyboardAppearance: \"dark\",\n    keyboardType: \"numeric\",\n    value: input,\n    onChangeText: setInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }), React.createElement(Pressable, {\n    style: styles.dmgButton,\n    onPress: function onPress() {\n      handleDmg(Number(input));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 15,\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"DAMAGE\"))), React.createElement(View, {\n    style: styles.pickerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  main: {\n    backgroundColor: \"#404040\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#303030\",\n    height: 55,\n    width: \"100%\",\n    marginBottom: 30\n  },\n  headerTitleContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headerTitle: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"500\"\n  },\n  hpContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"95%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"#29293d\"\n  },\n  hpBox: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 100,\n    width: 150\n  },\n  dashBox: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 100,\n    width: 70,\n    backgroundColor: \"#404040\"\n  },\n  hpNumber: {\n    color: \"white\",\n    fontSize: 35\n  },\n  hpText: {\n    color: \"#aaa\"\n  },\n  modContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: 250\n  },\n  buttonContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginLeft: 20\n  },\n  healButton: {\n    height: 40,\n    width: 130,\n    backgroundColor: \"#00eeaa\",\n    borderRadius: 3,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  dmgButton: {\n    height: 40,\n    width: 130,\n    backgroundColor: \"red\",\n    borderRadius: 3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: 130,\n    height: 40,\n    color: \"white\",\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 3,\n    marginBottom: 20,\n    backgroundColor: \"#303030\"\n  },\n  pickerContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 25,\n    paddingBottom: 75\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Resume Projects/Personal Project 481/characterBuilder/Screens/HealthScreen.js"],"names":["React","useState","useEffect","KeyboardAwareScrollView","useDispatch","useSelector","selectCharacter","selectID","setActiveCharacter","HealthScreen","route","character","setCharacter","params","nums","itemList","setItemList","selectedItem","setSelectedItem","input","setInput","id","dispatch","handleValueChange","value","toString","handleHeal","newChar","maxHealth","newHealth","health","data","handleDmg","console","log","backgroundColor","styles","main","x","y","header","headerTitleContainer","headerTitle","hpContainer","hpBox","hpNumber","hpText","dashBox","color","fontSize","modContainer","buttonContainer","healButton","Number","fontWeight","dmgButton","pickerContainer","StyleSheet","create","width","alignItems","flexDirection","justifyContent","height","marginBottom","flexWrap","flex","marginLeft","borderRadius","borderColor","borderWidth","marginRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Button, TextInput, Pressable } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCharacter, selectID, setActiveCharacter } from \"../redux/features/characterSlice\";\r\n// import Picker from \"@gregfrench/react-native-wheel-picker\";\r\n\r\nexport default function HealthScreen({ route }) {\r\n\tconst [character, setCharacter] = useState(useSelector(selectCharacter));\r\n\tconst [itemList, setItemList] = useState(route.params.nums);\r\n\tconst [selectedItem, setSelectedItem] = useState(99);\r\n\tconst [input, setInput] = useState(\"1\");\r\n\tconst id = useSelector(selectID);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleValueChange = (value) => {\r\n\t\tsetSelectedItem(value);\r\n\t\tsetInput((100 - value).toString());\r\n\t};\r\n\r\n\tconst handleHeal = (value) => {\r\n\t\tconst newChar = { ...character };\r\n\t\tconst maxHealth = character.maxHealth;\r\n\t\tconst newHealth = character.health + value;\r\n\t\tif (newHealth >= maxHealth) {\r\n\t\t\tnewChar.health = maxHealth;\r\n\t\t} else {\r\n\t\t\tnewChar.health = newHealth;\r\n\t\t}\r\n\t\tsetCharacter(newChar);\r\n\t\tdispatch(setActiveCharacter({ data: newChar, id }));\r\n\t};\r\n\r\n\tconst handleDmg = (value) => {\r\n\t\tconst newChar = { ...character };\r\n\t\tconst newHealth = character.health - value;\r\n\t\tif (newHealth <= 0) {\r\n\t\t\tnewChar.health = 0;\r\n\t\t} else {\r\n\t\t\tnewChar.health = newHealth;\r\n\t\t}\r\n\t\tsetCharacter(newChar);\r\n\t\tconsole.log(newChar);\r\n\t\tdispatch(setActiveCharacter({ data: newChar, id }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\tstyle={{ backgroundColor: \"#404040\" }}\r\n\t\t\tcontentContainerStyle={styles.main}\r\n\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\tbounces={false}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={styles.main}>\r\n\t\t\t\t<View style={styles.header}>\r\n\t\t\t\t\t<View style={styles.headerTitleContainer}>\r\n\t\t\t\t\t\t<Text style={styles.headerTitle}>HP Management</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={styles.hpContainer}>\r\n\t\t\t\t\t<View style={[styles.hpBox]}>\r\n\t\t\t\t\t\t<Text style={styles.hpNumber}>{character.health}</Text>\r\n\t\t\t\t\t\t<Text style={styles.hpText}>Current HP</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={styles.dashBox}>\r\n\t\t\t\t\t\t<Text style={{ color: \"#aaa\", fontSize: 35 }}>/</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={[styles.hpBox, { backgroundColor: \"#404040\" }]}>\r\n\t\t\t\t\t\t<Text style={styles.hpNumber}>{character.maxHealth}</Text>\r\n\t\t\t\t\t\t<Text style={styles.hpText}>Maximum HP</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View style={styles.modContainer}>\r\n\t\t\t\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tstyle={styles.healButton}\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\thandleHeal(Number(input));\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, fontWeight: \"600\" }}>HEAL</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\treturnKeyType='done'\r\n\t\t\t\t\t\t\t\tkeyboardAppearance='dark'\r\n\t\t\t\t\t\t\t\tkeyboardType='numeric'\r\n\t\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\t\tonChangeText={setInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tstyle={styles.dmgButton}\r\n\t\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\t\thandleDmg(Number(input));\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"white\", fontSize: 15, fontWeight: \"600\" }}>DAMAGE</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View style={styles.pickerContainer}>\r\n\t\t\t\t\t\t\t{/* <Picker\r\n\t\t\t\t\t\t\t\tstyle={{ width: 120, height: 140 }}\r\n\t\t\t\t\t\t\t\tselectedValue={selectedItem}\r\n\t\t\t\t\t\t\t\titemStyle={{ color: \"white\", fontSize: 20 }}\r\n\t\t\t\t\t\t\t\tonValueChange={(index) => handleValueChange(index)}>\r\n\t\t\t\t\t\t\t\t{itemList.map((value, i) => (\r\n\t\t\t\t\t\t\t\t\t<Picker.Item label={value} value={i} key={i} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Picker> */}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tbackgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\theader: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tbackgroundColor: \"#303030\",\r\n\t\theight: 55,\r\n\t\twidth: \"100%\",\r\n\t\tmarginBottom: 30,\r\n\t},\r\n\theaderTitleContainer: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\theaderTitle: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t},\r\n\thpContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\twidth: \"95%\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\talignItems: \"center\",\r\n\t\tbackgroundColor: \"#29293d\",\r\n\t},\r\n\thpBox: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\theight: 100,\r\n\t\twidth: 150,\r\n\t},\r\n\tdashBox: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\theight: 100,\r\n\t\twidth: 70,\r\n\t\tbackgroundColor: \"#404040\",\r\n\t},\r\n\thpNumber: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 35,\r\n\t},\r\n\thpText: {\r\n\t\tcolor: \"#aaa\",\r\n\t},\r\n\tmodContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\theight: 250,\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"space-around\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginLeft: 20,\r\n\t},\r\n\thealButton: {\r\n\t\theight: 40,\r\n\t\twidth: 130,\r\n\t\tbackgroundColor: \"#00eeaa\",\r\n\t\tborderRadius: 3,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tdmgButton: {\r\n\t\theight: 40,\r\n\t\twidth: 130,\r\n\t\tbackgroundColor: \"red\",\r\n\t\tborderRadius: 3,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\twidth: 130,\r\n\t\theight: 40,\r\n\t\tcolor: \"white\",\r\n\t\tborderColor: \"white\",\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 3,\r\n\t\tmarginBottom: 20,\r\n\t\tbackgroundColor: \"#303030\",\r\n\t},\r\n\tpickerContainer: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginRight: 25,\r\n\t\tpaddingBottom: 75,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}